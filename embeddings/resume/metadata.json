{
  "resume_bullets": [
    "Architected a route-aware fuel optimization widget in Kotlin + Java using a graph-ranking engine, increasing recommendation accuracy by 40% for in-vehicle navigation",
    "Engineered a tire-pressure system in C++ via HAL + AIDL with sub-second alerts and 99% reliability",
    "Enhanced 30+ data handlers through async queues and lock-free buffers, boosting throughput by 45%",
    "Deployed a diagnostics dashboard in Kotlin + Jetpack Compose, cutting debug time by 30% across teams",
    "Led automation of PR validation pipelines with n8n and GitHub Actions, saving 20 min/deploy",
    "Delivered a real-time React analytics platform with Flask and PostgreSQL, serving 1,000 enterprise users",
    "Automated event anomaly-detection pipelines using Selenium + PGVector, reducing 75% processing time",
    "Architected a Node.js service with WebSockets + S3 for image aggregation, cutting query latency by 35%",
    "Built a React Native dashboard with GraphQL API integration for real-time client metrics",
    "Developed Wi-Fi validation pipelines in Python/C++ integrated with Jenkins CI/CD, cutting test time 40%",
    "Diagnosed Linux drivers and built MQTT tools, lowering latency variance by 25% in connectivity modules",
    "Built a real-time course notifier with FastAPI, AWS Lambda, and DynamoDB, serving 80K+ students with <200 ms query latency",
    "Automated course ingestion pipelines via Selenium and REST APIs, reducing redundant requests by 60%",
    "Architected a serverless backend with caching and concurrent optimization, boosting search speed by 40%",
    "Prototyped LLM features for personalized alerts and semantic course matching to enhance engagement",
    "Developed a full-stack platform in Next.js, Prisma, and PostgreSQL with multi-profile management",
    "Designed a multi-agent LLM system for resume job alignment, improving match accuracy by 60%",
    "Engineered AI cover-letter generation and ATS keyword optimizer in Python, creating tailored docs in <3 s"
  ],
  "dimension": 384,
  "num_vectors": 18
}